def upgrade() -> None:
    # 创建用户表
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer, primary_key=True, autoincrement=True),
        sa.Column("username", sa.String(50), nullable=False, unique=True),
        sa.Column("password", sa.String(100), nullable=False),
        sa.Column("email", sa.String(100), nullable=False, unique=True),
    )
    
    # 创建学生表
    op.create_table(
        "student",
        sa.Column("student_id", sa.Integer, primary_key=True),
        sa.Column("grade", sa.String(20), nullable=False),
        sa.Column("major", sa.String(50), nullable=False),
        sa.Column("user_id", sa.Integer, sa.ForeignKey("user.user_id"), nullable=False),
    )
    
    # 创建教师表
    op.create_table(
        "teacher",
        sa.Column("teacher_id", sa.Integer, primary_key=True),
        sa.Column("title", sa.String(50), nullable=False),
        sa.Column("department", sa.String(50), nullable=False),
        sa.Column("user_id", sa.Integer, sa.ForeignKey("user.user_id"), nullable=False),
    )
    
    # 创建班级表
    op.create_table(
        "class",
        sa.Column("class_id", sa.Integer, primary_key=True),
        sa.Column("class_name", sa.String(50), nullable=False),
        sa.Column("grade", sa.String(20), nullable=False),
    )
    
    # 创建权限表
    op.create_table(
        "permission",
        sa.Column("permission_id", sa.Integer, primary_key=True),
        sa.Column("permission_name", sa.String(50), nullable=False),
        sa.Column("description", sa.Text),
    )
    
    # 创建用户权限关联表
    op.create_table(
        "user_permission",
        sa.Column("user_id", sa.Integer, sa.ForeignKey("user.user_id"), primary_key=True),
        sa.Column("permission_id", sa.Integer, sa.ForeignKey("permission.permission_id"), primary_key=True),
    )
    
    # 创建课程表
    op.create_table(
        "course",
        sa.Column("course_id", sa.Integer, primary_key=True),
        sa.Column("course_name", sa.String(100), nullable=False),
        sa.Column("credit", sa.Integer, nullable=False),
    )
    
    # 创建作业表
    op.create_table(
        "assignment",
        sa.Column("assignment_id", sa.Integer, primary_key=True),
        sa.Column("content", sa.Text, nullable=False),
        sa.Column("deadline", sa.DateTime, nullable=False),
        sa.Column("status", sa.String(20), nullable=False),
        sa.Column("teacher_id", sa.Integer, sa.ForeignKey("teacher.teacher_id")),
    )
    
    # 创建学生班级关联表
    op.create_table(
        "student_class",
        sa.Column("student_id", sa.Integer, sa.ForeignKey("student.student_id"), primary_key=True),
        sa.Column("class_id", sa.Integer, sa.ForeignKey("class.class_id"), primary_key=True),
    )
    
    # 创建教师班级管理关联表
    op.create_table(
        "teacher_class",
        sa.Column("teacher_id", sa.Integer, sa.ForeignKey("teacher.teacher_id"), primary_key=True),
        sa.Column("class_id", sa.Integer, sa.ForeignKey("class.class_id"), primary_key=True),
    )
    
    # 创建教师课程教授关联表
    op.create_table(
        "teacher_course",
        sa.Column("teacher_id", sa.Integer, sa.ForeignKey("teacher.teacher_id"), primary_key=True),
        sa.Column("course_id", sa.Integer, sa.ForeignKey("course.course_id"), primary_key=True),
    )
    
    # 创建学生选课表（含成绩属性）
    op.create_table(
        "student_course",
        sa.Column("student_id", sa.Integer, sa.ForeignKey("student.student_id"), primary_key=True),
        sa.Column("course_id", sa.Integer, sa.ForeignKey("course.course_id"), primary_key=True),
        sa.Column("grade", sa.Float),
    )
    
    # 创建作业提交表
    op.create_table(
        "submission",
        sa.Column("submission_id", sa.Integer, primary_key=True),
        sa.Column("student_id", sa.Integer, sa.ForeignKey("student.student_id")),
        sa.Column("assignment_id", sa.Integer, sa.ForeignKey("assignment.assignment_id")),
        sa.Column("submit_time", sa.DateTime, default=sa.func.now()),
        sa.Column("file_path", sa.String(200), nullable=False),
    )

def downgrade() -> None:
    # 按创建顺序的反序删除表
    op.drop_table("submission")
    op.drop_table("student_course")
    op.drop_table("teacher_course")
    op.drop_table("teacher_class")
    op.drop_table("student_class")
    op.drop_table("assignment")
    op.drop_table("course")
    op.drop_table("user_permission")
    op.drop_table("permission")
    op.drop_table("class")
    op.drop_table("teacher")
    op.drop_table("student")
    op.drop_table("users")